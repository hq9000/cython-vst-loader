#!/bin/bash

# This way you can customize which branches should be skipped when
# prepending commit message.

if [ -z "$BRANCHES_TO_SKIP" ]; then
  BRANCHES_TO_SKIP=(master develop test)
fi

BRANCH_NAME=$(git symbolic-ref --short HEAD)
REGEXP='([0-9]+)'
ISSUE_NUMBER=9999999

if [[ ${BRANCH_NAME} =~ ${REGEXP} ]]; then
   ISSUE_NUMBER=$BASH_REMATCH
else
   echo "does not match"
fi


BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")
BRANCH_IN_COMMIT=$(grep -c "\[$BRANCH_NAME\]" $1)

if [ -n "$BRANCH_NAME" ] && ! [[ $BRANCH_EXCLUDED -eq 1 ]] && ! [[ $BRANCH_IN_COMMIT -ge 2 ]]; then
  original_message=`cat $1`
  echo [${BRANCH_NAME} \#${ISSUE_NUMBER}] $original_message > $1
  echo "" >> $1
fi
